{"version":3,"sources":["components/Searchbar.js","components/ImageGalleryItem.js","components/ImageGallery.js","components/Button.js","components/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["Searchbar","state","imageName","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","trim","props","onSubmit","alert","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","src","name","id","alt","ImageGallery","images","loading","key","idForModal","largeImageSrc","componentDidUpdate","prevProps","pageNumber","getImages","prevImages","console","log","fetch","then","r","json","hits","finally","changeImagesLength","handleGetId","targetId","target","onClick","onOpenImage","map","i","webformatURL","Button","onLoadMore","Modal","App","isModalOpen","imagesLength","largeImageURL","handleSerchSubmit","getLargeImage","image","handleOpenImage","find","handleLoadMore","currentState","window","scrollTo","top","document","documentElement","scrollHeight","behavior","changePageNumber","prevPageNumber","length","color","height","width","timeout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.10445b5c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class Searchbar extends Component {\r\n  state = { imageName: \"\" };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ imageName: e.currentTarget.value });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (this.state.imageName.trim() === \"\") {\r\n      alert(\"Enter picture name\");\r\n      return;\r\n    }\r\n    this.props.onSubmit(this.state.imageName.trim());\r\n    this.setState({ imageName: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            onChange={this.handleChange}\r\n            value={this.state.imageName}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction ImageGalleryItem({ src, name, id }) {\r\n  return (\r\n    <>\r\n      <li className=\"ImageGalleryItem\" key={id}>\r\n        <img src={src} alt={name} className=\"ImageGalleryItem-image\" id={id} />\r\n      </li>\r\n    </>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {};\r\n\r\nexport default ImageGalleryItem;\r\n","import React, { Component } from \"react\";\r\nimport ImageGalleryItem from \"./ImageGalleryItem\";\r\n\r\nexport default class ImageGallery extends Component {\r\n  state = {\r\n    images: [],\r\n    loading: false,\r\n    key: \"19420354-3227e9c850ee70e183cd8e591\",\r\n    idForModal: \"\",\r\n    largeImageSrc: \"\",\r\n  };\r\n  componentDidUpdate = (prevProps) => {\r\n    if (\r\n      prevProps.imageName !== this.props.imageName ||\r\n      prevProps.pageNumber !== this.props.pageNumber\r\n    ) {\r\n      this.getImages();\r\n    }\r\n  };\r\n\r\n  // Рендерим картинки в Галерею\r\n  getImages = () => {\r\n    const prevImages = this.state.images;\r\n    console.log(this.state.images);\r\n    this.setState(() => {\r\n      return { loading: true, images: [] };\r\n    });\r\n    console.log(this.state.images);\r\n\r\n    fetch(\r\n      `https://pixabay.com/api/?key=${this.state.key}&q=${this.props.imageName}&image_type=photo&per_page=3&page=${this.props.pageNumber}`\r\n    )\r\n      .then((r) => r.json())\r\n      .then((r) => this.setState({ images: [...prevImages, ...r.hits] }))\r\n      .finally(() => {\r\n        this.setState({ loading: false });\r\n        this.props.changeImagesLength(this.state.images);\r\n      });\r\n  };\r\n\r\n  // Получаем id от картинки, на которую кликаем\r\n  handleGetId = (e) => {\r\n    const targetId = e.target.id;\r\n    console.log(e.target.id); //736877\r\n    this.setState(() => {\r\n      return { idForModal: targetId };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { images } = this.state;\r\n    return (\r\n      <>\r\n        <ul\r\n          className=\"ImageGallery\"\r\n          onClick={(e) => {\r\n            this.handleGetId(e);\r\n            this.props.onOpenImage(this.state);\r\n          }}\r\n        >\r\n          {images.map((i) => (\r\n            <ImageGalleryItem src={i.webformatURL} name={i.type} id={i.id} />\r\n          ))}\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport class Button extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button\r\n          type=\"button\"\r\n          className=\"Button\"\r\n          onClick={this.props.onLoadMore}\r\n        >\r\n          Load more\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Modal({ src }) {\r\n  return (\r\n    <>\r\n      <div className=\"Overlay\">\r\n        <div className=\"Modal\">\r\n          <img src={src} alt=\"Model\" />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nModal.propTypes = {};\r\n\r\nexport default Modal;\r\n","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport Searchbar from \"./components/Searchbar\";\nimport ImageGallery from \"./components/ImageGallery\";\nimport Button from \"./components/Button\";\nimport Loader from \"react-loader-spinner\";\nimport Modal from \"./components/Modal\";\n\nexport default class App extends Component {\n  state = {\n    imageName: \"\",\n    isModalOpen: false,\n    loading: false,\n    pageNumber: 1,\n    imagesLength: 0,\n    largeImageURL: \"\",\n  };\n  handleSerchSubmit = (imageName) => {\n    this.setState({ imageName });\n  };\n  // Получение большой картинки для модалки\n  getLargeImage = (image) => {\n    this.setState({ largeImageURL: image.largeImageURL });\n  };\n  // Открытие модалки с большой картинкой\n  handleOpenImage = ({ images, idForModal }) => {\n    console.log(idForModal); // ''\n    const image = images.find((i) => i.id === idForModal);\n    console.log(image); //undefined\n    this.setState({ largeImageURL: image.largeImageURL });\n    this.setState({ isModalOpen: true });\n  };\n\n  // Добавление следующих картинок\n  handleLoadMore = () => {\n    this.setState((currentState) => {\n      return { pageNumber: currentState.pageNumber + 1 };\n    });\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n  };\n\n  // Изменение номера страницы\n  changePageNumber = ({ pageNumber }) => {\n    const prevPageNumber = pageNumber;\n    this.setState({ pageNumber: prevPageNumber + 1 });\n  };\n\n  // Изменений длины массива с картинками\n  changeImagesLength = (images) => {\n    this.setState({ imagesLength: images.length });\n  };\n\n  render() {\n    const { loading, imageName, pageNumber, imagesLength } = this.state;\n    return (\n      <>\n        <Searchbar onSubmit={this.handleSerchSubmit} />\n        <ImageGallery\n          imageName={imageName}\n          onOpenImage={this.handleOpenImage}\n          pageNumber={pageNumber}\n          changeImagesLength={this.changeImagesLength}\n        />\n        {loading && (\n          <div className=\"LoaderContainer\">\n            <div className=\"Loader\">\n              <Loader\n                type=\"ThreeDots\"\n                color=\"#00BFFF\"\n                height={100}\n                width={100}\n                timeout={10000}\n              />\n            </div>\n          </div>\n        )}\n        {imagesLength > 0 && <Button onLoadMore={this.handleLoadMore} />}\n        {this.state.isModalOpen && <Modal src={this.largeImageURL} />}\n      </>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}