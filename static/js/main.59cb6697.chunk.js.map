{"version":3,"sources":["components/Searchbar.js","components/ImageGalleryItem.js","components/ImageGallery.js","components/Button.js","components/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["Searchbar","state","imageName","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","trim","props","onSubmit","alert","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","src","name","id","alt","String","ImageGallery","images","loading","key","componentDidUpdate","prevProps","prevState","pageNumber","resetPageNumber","getImages","prevImages","changeLoading","changeImagesLength","errorHandling","fetch","then","r","json","total","hits","catch","error","message","finally","window","scrollTo","top","document","documentElement","scrollHeight","behavior","onClick","onOpenImage","map","i","webformatURL","Button","callBack","Modal","addEventListener","onCloseByKey","onCloseModelOverlay","App","isModalOpen","imagesLength","largeImageURL","idForModal","handleSerchSubmit","handleOpenImage","target","targetId","image","find","Number","isLoadMoreVisible","handleLoadMore","currentState","bool","length","handleCloseByOverlay","classList","contains","handleCloseByKey","event","code","errorMessage","onKeyDown","color","height","width","timeout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.59cb6697.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport class Searchbar extends Component {\r\n  state = { imageName: \"\" };\r\n\r\n  // Отображение значений в инпуте\r\n  handleChange = (e) => {\r\n    this.setState({ imageName: e.currentTarget.value });\r\n  };\r\n\r\n  // Внесение изменений в стэйт imageName по сабмиту формы\r\n  handleSubmit = (e) => {\r\n    const { imageName } = this.state;\r\n    e.preventDefault();\r\n    if (imageName.trim() === \"\") {\r\n      alert(\"Enter picture name\");\r\n      return;\r\n    }\r\n    this.props.onSubmit(imageName.trim());\r\n    this.setState({ imageName: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            onChange={this.handleChange}\r\n            value={this.state.imageName}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction ImageGalleryItem({ src, name, id }) {\r\n  return (\r\n    <>\r\n      <li className=\"ImageGalleryItem\" key={String(id)}>\r\n        <img\r\n          src={src}\r\n          alt={name}\r\n          className=\"ImageGalleryItem-image\"\r\n          id={String(id)}\r\n        />\r\n      </li>\r\n    </>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  src: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  id: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React, { Component } from \"react\";\r\nimport ImageGalleryItem from \"./ImageGalleryItem\";\r\n\r\nexport default class ImageGallery extends Component {\r\n  state = {\r\n    images: [],\r\n    loading: false,\r\n    key: \"19420354-3227e9c850ee70e183cd8e591\",\r\n  };\r\n  componentDidUpdate = (prevProps, prevState) => {\r\n    const { imageName, pageNumber, resetPageNumber } = this.props;\r\n    // Если запрос изменился, то обнуляем массив картинок и номер страницы,\r\n    // и рендерим картинки\r\n    if (prevProps.imageName !== imageName) {\r\n      this.setState({ images: [] }, () => {\r\n        this.getImages(this.state.images);\r\n      });\r\n      resetPageNumber();\r\n      return;\r\n    }\r\n    // Если номер стр изменился и стэйт остался без изменений,\r\n    // рендерим картинки\r\n    if (prevProps.pageNumber !== pageNumber && prevState === this.state) {\r\n      this.getImages(this.state.images);\r\n    }\r\n  };\r\n\r\n  // Рендерим картинки в Галерею\r\n  getImages = (prevImages) => {\r\n    const { key } = this.state;\r\n    const {\r\n      changeLoading,\r\n      imageName,\r\n      pageNumber,\r\n      changeImagesLength,\r\n      errorHandling,\r\n    } = this.props;\r\n    changeLoading(true);\r\n    fetch(\r\n      `https://pixabay.com/api/?key=${key}&q=${imageName}&image_type=photo&per_page=12&page=${pageNumber}`\r\n    )\r\n      .then((r) => r.json())\r\n      .then((r) => {\r\n        if (r.total > 0) {\r\n          return this.setState({ images: [...prevImages, ...r.hits] });\r\n        }\r\n\r\n        errorHandling(`No resault on your request \"${imageName}\"`);\r\n        return;\r\n      })\r\n      .catch((error) => errorHandling(error.message))\r\n      .finally(() => {\r\n        changeLoading(false);\r\n        changeImagesLength(this.state.images);\r\n        window.scrollTo({\r\n          top: document.documentElement.scrollHeight,\r\n          behavior: \"smooth\",\r\n        });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { images } = this.state;\r\n    return (\r\n      <>\r\n        <ul\r\n          className=\"ImageGallery\"\r\n          onClick={(e) => this.props.onOpenImage(e, images)}\r\n        >\r\n          {images.map((i) => (\r\n            <ImageGalleryItem src={i.webformatURL} name={i.type} id={i.id} />\r\n          ))}\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Button({ callBack }) {\r\n  return (\r\n    <div>\r\n      <button type=\"button\" className=\"Button\" onClick={callBack}>\r\n        Load more\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  callBack: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Modal extends Component {\r\n  componentDidMount() {\r\n    document.addEventListener(\"keydown\", this.props.onCloseByKey);\r\n  }\r\n  render() {\r\n    const { src, onCloseModelOverlay } = this.props;\r\n    return (\r\n      <>\r\n        <div className=\"Overlay\" onClick={onCloseModelOverlay}>\r\n          <div className=\"Modal\">\r\n            <img src={src} alt=\"Model\" />\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport Searchbar from \"./components/Searchbar\";\nimport ImageGallery from \"./components/ImageGallery\";\nimport Button from \"./components/Button\";\nimport Loader from \"react-loader-spinner\";\nimport Modal from \"./components/Modal\";\n\nexport default class App extends Component {\n  state = {\n    imageName: \"\",\n    isModalOpen: false,\n    loading: false,\n    pageNumber: 1,\n    imagesLength: 0,\n    largeImageURL: \"\",\n    idForModal: 0,\n    error: null,\n  };\n  handleSerchSubmit = (imageName) => {\n    this.setState({ imageName });\n  };\n\n  // Открытие модалки с большой картинкой\n  handleOpenImage = (e, images) => {\n    if (!e.target.src) {\n      return;\n    }\n    const targetId = e.target.id;\n    const image = images.find((i) => i.id === Number(targetId));\n    this.setState({ largeImageURL: image.largeImageURL });\n    this.setState({ isModalOpen: true });\n  };\n\n  // Добавление кнопки Load more\n  isLoadMoreVisible = () => {\n    if (this.state.imagesLength === 0 && this.state.loading === false) {\n      return false;\n    }\n  };\n  // Добавление следующих картинок\n  handleLoadMore = () => {\n    this.setState((currentState) => {\n      return { pageNumber: currentState.pageNumber + 1 };\n    });\n  };\n\n  // Изменение номера страницы\n  resetPageNumber = () => {\n    this.setState({ pageNumber: 1 });\n  };\n\n  // Изменение состояние loading\n  changeLoading = (bool) => {\n    this.setState({ loading: bool });\n  };\n\n  // Изменений длины массива с картинками\n  changeImagesLength = (images) => {\n    this.setState({ imagesLength: images.length });\n  };\n  // Закрытие модалки по клику на оверлей\n  handleCloseByOverlay = (e) => {\n    if (!e.target.classList.contains(\"Overlay\")) {\n      return;\n    }\n    this.setState({ isModalOpen: false });\n  };\n\n  // Закрытие модалки по Esc\n  handleCloseByKey = (event) => {\n    if (event.code !== \"Escape\") {\n      return;\n    }\n    this.setState({ isModalOpen: false });\n  };\n\n  // Обработка ошибки запроса\n  errorHandling = (errorMessage) => {\n    this.setState({ error: errorMessage }, () => {\n      alert(this.state.error);\n    });\n  };\n\n  render() {\n    const {\n      loading,\n      imageName,\n      pageNumber,\n      isModalOpen,\n      imagesLength,\n    } = this.state;\n    return (\n      <div onKeyDown={this.handleCloseByKey}>\n        <Searchbar onSubmit={this.handleSerchSubmit} />\n        <ImageGallery\n          imageName={imageName}\n          onOpenImage={this.handleOpenImage}\n          pageNumber={pageNumber}\n          changeImagesLength={this.changeImagesLength}\n          resetPageNumber={this.resetPageNumber}\n          changeLoading={this.changeLoading}\n          errorHandling={this.errorHandling}\n        />\n        {loading && (\n          <div className=\"LoaderContainer\">\n            <div className=\"Loader\">\n              <Loader\n                type=\"ThreeDots\"\n                color=\"#00BFFF\"\n                height={100}\n                width={100}\n                timeout={10000}\n              />\n            </div>\n          </div>\n        )}\n        {imagesLength > 0 && <Button callBack={this.handleLoadMore} />}\n        {isModalOpen && (\n          <Modal\n            src={this.state.largeImageURL}\n            onCloseModelOverlay={this.handleCloseByOverlay}\n            onCloseByKey={this.handleCloseByKey}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}